name: CI
on: [ push, pull_request ]
jobs:
  rustfmt:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: rustup
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
  test:
    strategy:
      matrix:
        platform: [ ubuntu-20.04, macos-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: rustup
        uses: dtolnay/rust-toolchain@stable
      - run: cargo test --all-targets
  clippy:
    strategy:
      matrix:
        platform: [ ubuntu-20.04, macos-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: rustup
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --all-targets -- -D warnings
  deb:
    strategy:
      matrix:
        include:
          - platform: ubuntu-20.04
            distro_version: focal
          - platform: ubuntu-22.04
            distro_version: jammy
    runs-on: ${{ matrix.platform }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: rustup
        uses: dtolnay/rust-toolchain@stable
      - run: cargo install cargo-deb
      - run: cargo deb
      - name: Install Cloudsmith CLI
        if: startsWith(github.ref, 'refs/tags/')
        run: pip install --upgrade --user cloudsmith-cli
      - name: Publish to Cloudsmith
        if: startsWith(github.ref, 'refs/tags/')
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
        run: find target/debian -name "*.deb" -print0 | xargs -0 -n1 cloudsmith push deb octobuild/octobuild/ubuntu/${{ matrix.distro_version }}
  msi:
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: rustup
        uses: dtolnay/rust-toolchain@stable
      - run: cargo install cargo-wix
      - run: cargo wix --nocapture
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: target/wix/*.msi
      - name: publish to gh-releases
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/wix/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: publish to chocolatey.org
        if: startsWith(github.ref, 'refs/tags/')
        run: .\choco-publish.ps1 ${env:GITHUB_REF} ${env:CHOCOLATEY_APIKEY}
        env:
          CHOCOLATEY_APIKEY: ${{ secrets.CHOCOLATEY_APIKEY }}
      - name: publish to WinGet
        if: startsWith(github.ref, 'refs/tags/')
        run: .\winget-publish.ps1 ${env:GITHUB_REF} ${env:GH_PERSONAL_TOKEN}
        env:
          # We cannot use GITHUB_TOKEN here because it doesn't have permission to work with winget-pkgs repository fork
          GH_PERSONAL_TOKEN: ${{ secrets.GH_PERSONAL_TOKEN }}
  homebrew:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: publish to Homebrew
        uses: dawidd6/action-homebrew-bump-formula@v3
        with:
          # See https://github.com/marketplace/actions/homebrew-bump-formula#usage
          token: ${{ secrets.GH_PERSONAL_TOKEN }}
          formula: octobuild
